<?php

/**
 * @file
 * Defines all the hooks this module implements.
 */


$DS_CWRC_ISLANDORA_XML = "CWRC-Content";

/**
 * Implements hook_menu().
 */
function cwrc_islandora_xml_menu() {
  return array(
    'islandora/object/%islandora_object/view_mods_as_marcxml' => array(
      'title' => 'MARCXML',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'islandora_marcxml_view',
      'page arguments' => array(2),
      'access callback' => 'islandora_marcxml_access_callback',
      'access arguments' => array(2),
      'file' => 'includes/utilities.inc',
    ),
    'islandora/object/%islandora_object/download_mods_as_marcxml' => array(
      'title' => 'Download MARCXML',
      'type' => MENU_CALLBACK,
      'page callback' => 'islandora_marcxml_transform_mods_to_marcxml',
      'page arguments' => array(2),
      'access callback' => 'islandora_marcxml_access_callback',
      'access arguments' => array(2),
      'delivery callback' => 'islandora_marcxml_xml_download',
      'file' => 'includes/utilities.inc',
    ),
     'islandora/object/%islandora_object/view_cwrc_xml' => array(
      'title' => 'CWRC XML',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'cwrc_islandora_xml_view',
      'page arguments' => array(2),
      'access callback' => 'cwrc_islandora_xml_access_callback',
      'access arguments' => array(2),
      'file' => 'includes/utilities.inc',
    ),
   'islandora/object/%islandora_object/download_cwrc_xml_contents' => array(
      'title' => 'Download CWRC XML',
      'type' => MENU_CALLBACK,
      'page callback' => 'cwrc_islandora_xml_transform_xml_to_html',
      'page arguments' => array(2),
      'access callback' => 'cwrc_islandora_xml_access_callback',
      'access arguments' => array(2),
      'delivery callback' => 'cwrc_islandora_xml_download',
      'file' => 'includes/utilities.inc',
    ),
    ),
  );
}

/**
 * Delivery callback used to download the output as XML.
 *
 * @param string $output
 *   The content to download.
 */
function cwrc_islandora_xml_download($output) {
  drupal_add_http_header('Content-type', 'text/xml;charset=utf8');
  drupal_add_http_header('Content-length', strlen($output));
  drupal_add_http_header('Content-Disposition', 'attachment; filename="cwrc.xml"');
  print $output;
  drupal_page_footer();
}

/**
 * Access callback.
 *
 * Requires that the given object contains a MODS datastream (and to be
 * viewable, as per the stock permissions).
 *
 * @param AbstractObject $object
 *   The object to test, if NULL the given object doesn't exist or is
 *   inaccessible.
 *
 * @return bool
 *   TRUE if the user is allowed to access the marcxml interface, FALSE
 *   otherwise.
 */
function cwrc_islandora_xml_access_callback($object) {
  return is_object($object) && isset($object[$DS_CWRC_ISLANDORA_XML]) && islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object[$DS_CWRC_ISLANDORA_XML]);
}

/**
 * Implements hook_islandora_ingest_steps_alter().
 */
function cwrc_islandora_xml_islandora_ingest_steps_alter(array &$steps, array &$form_state) {
  if (isset($steps['xml_form_builder_metadata_step'])) {
    $association = isset($steps['xml_form_builder_metadata_step']['args'][0]) ? $steps['xml_form_builder_metadata_step']['args'][0] : NULL;
    if (isset($association['dsid']) && $association['dsid'] == $DS_CWRC_ISLANDORA_XML) {
      $steps['cwrc_islandora_xml_upload'] = array(
        'type' => 'form',
        'weight' => 1,
        'form_id' => 'islandora_marcxml_file_form',
        'args' => array(),
        'file' => 'includes/file.form.inc',
        'module' => 'cwrc_islandora_xml',
      );
    }
  }
}
